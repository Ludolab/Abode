using UnityEngine;
using System.Collections;
//using System;

namespace ExitGames.SportShooting {
    public class Clock : MonoBehaviour {
    //-----------------------------------------------------------------------------------------------------------------------------------------
    //-----------------------------------------------------------------------------------------------------------------------------------------
    //-----------------------------------------------------------------------------------------------------------------------------------------

        public bool hasPendulum;
        public float timeHours;
        public float timeMinutes;
        public float timeSpeed = 1.0f;

        Transform pointerMinutes;
        Transform pointerHours;
        Transform pendulum;

        float pendulumAngle;

    //-----------------------------------------------------------------------------------------------------------------------------------------
    //-----------------------------------------------------------------------------------------------------------------------------------------
    //-----------------------------------------------------------------------------------------------------------------------------------------
        void Start() 
        {
            pointerMinutes = transform.Find("minutenzeiger");
            pointerHours = transform.Find("stundenzeiger");

            if (hasPendulum)
            pendulum = transform.Find("pendel");

            timeHours =System.DateTime.Now.Hour;
            timeMinutes =System.DateTime.Now.Minute;
        }

        //-----------------------------------------------------------------------------------------------------------------------------------------
        //-----------------------------------------------------------------------------------------------------------------------------------------
        //-----------------------------------------------------------------------------------------------------------------------------------------
        void Update() 
        {
            //-----------------------------------------------------------------------------------------------------------
            //-----------------------------------------------------------------------------------------------------------
            //-----------------------------------------------------------------------------------------------------------
            timeMinutes += (Time.deltaTime * timeSpeed / 60.0f);
            timeHours += (Time.deltaTime * timeSpeed / (60.0f * 60.0f));
            //-----------------------------------------------------------------------------------------------------------
            //-----------------------------------------------------------------------------------------------------------
            //-----------------------------------------------------------------------------------------------------------
            float angleMinutes = (360.0f / 60.0f) * (int)timeMinutes;
            float angleHours = ((360.0f / 12.0f) * (int)timeHours) + ((360.0f / (60.0f * 12.0f)) * (int)timeMinutes);

            pointerMinutes.localEulerAngles = new Vector3(0.0f, 0.0f, angleMinutes);
            pointerHours.localEulerAngles = new Vector3(0.0f, 0.0f, angleHours);
            
            if(hasPendulum)
            {
                pendulum.transform.localEulerAngles = new Vector3(0.0f, 0.0f, (Mathf.Sin(pendulumAngle) * 4.0f)); 
                pendulumAngle = pendulumAngle + ((Time.deltaTime * 4.0f) % 360.0f);
            }


            if(Input.GetKeyDown(KeyCode.M)) {
                _photonView.RPC("Chime",PhotonTargets.All);
            }

        }


        public PhotonView _photonView;
        public AudioSource _audio;
        
        [PunRPC]
        void Chime() {

            _audio.Play();

        }

        
    //-----------------------------------------------------------------------------------------------------------------------------------------
    //-----------------------------------------------------------------------------------------------------------------------------------------
    //-----------------------------------------------------------------------------------------------------------------------------------------
    }
}

